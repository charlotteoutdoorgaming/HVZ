@using HVZ.Web.Client.Shared.Components
@using System.ComponentModel.DataAnnotations
@inject IUserService UserService

<MudLink OnClick="ShowForgotPasswordDialog">Forgot password</MudLink>

<Dialog @ref="forgotPasswordDialog">
    <TitleContent>
        <MudText Typo="Typo.h6">
            Forgot your password
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudText>
            Enter your email address and we will send you an email with a link to recover your account.
        </MudText>
        <MudTextField
            FullWidth
            @bind-Value="request.Email"
            Label="Email address"
            InputType="InputType.Email"
            Required
            Immediate/>
    </DialogContent>
    <DialogActions>
        <MudButton>Cancel</MudButton>
        <MudButton 
            Variant="Variant.Filled" 
            Color="Color.Primary"
            Disabled="@Disabled"
            OnClick="OnSubmit">
            @if(!loading)
            {
                <span>Submit</span>
            }
            else
            {
                <MudProgressCircular
                    Indeterminate
                    Size="Size.Small" />
            }
        </MudButton>
    </DialogActions>
</Dialog>

@code
{
    ForgotPasswordRequest request = new();
    Dialog? forgotPasswordDialog;
    EmailAddressAttribute emailValidator = new() { ErrorMessage = "Invalid Email Address" };
    bool loading = false;

    bool Disabled => !IsValidEmail || loading;

    bool IsValidEmail =>
        emailValidator.IsValid(request.Email) &&
        !string.IsNullOrEmpty(request.Email?.Trim());

    void ShowForgotPasswordDialog() => forgotPasswordDialog?.Show();

    async Task OnSubmit()
    {
        loading = true;
        await UserService.ForgotPassword(request);
        loading = false;
    }
}