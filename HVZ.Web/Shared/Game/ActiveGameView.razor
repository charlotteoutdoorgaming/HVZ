@using HVZ.Web.Shared.Org_Authorization
@inject IGameRepo GameRepo
@implements IDisposable

<h3 class="mb-3">@ActiveGame?.Name
    @if (activePlayer is null)
    {
        @*Join game button*@
    }
</h3>

<ul class="nav nav-pills nav-fill m-0">
    <li class="nav-item">
        <button class="nav-link active" data-bs-toggle="pill" data-bs-target="#">
            <i class="fa-solid fa-house-user"></i>
            <span class="d-none d-md-inline">Home</span>
        </button>
    </li>
    <li class="nav-item">
        <button class="nav-link" data-bs-toggle="pill" data-bs-target="#">
            <i class="fa-solid fa-users"></i>
            <span class="d-none d-md-inline">Players</span>
        </button>
    </li>
    <li class="nav-item">
        <button class="nav-link" data-bs-toggle="pill" data-bs-target="#tab-log">
            <i class="fa-solid fa-list"></i>
            <span class="d-none d-md-inline">Log</span>
        </button>
    </li>
    <OrgAuthorizedModerator>
        <li class="nav-item">
            <button class="nav-link" data-bs-toggle="pill" data-bs-target="#">
                <i class="fa-solid fa-shield"></i>
                <span class="d-none d-md-inline">Moderation</span>
            </button>
        </li>
    </OrgAuthorizedModerator>
</ul>

<div id="tab-content" class="tab-content">
    <div id="tab-home" class="tab-pane fade show active" role="tabpanel">
        @*Home tab*@
    </div>
    <div id="tab-players" class="tab-pane fade" role="tabpanel">
        @*Players tab*@
    </div>
    <div id="tab-log" class="tab-pane fade" role="tabpanel">
        @*Log tab*@
        <GameLogView ActiveGame="@ActiveGame" ActivePlayer="@activePlayer" />
    </div>
    <OrgAuthorizedModerator>
        <div id="tab-mod" class="tab-pane fade" role="tabpanel">
            @*Game settings/moderation tab*@
        </div>
    </OrgAuthorizedModerator>
</div>

@if (activePlayer is null)
{
    @*Join game modal*@
}

@code {
    [Parameter]
    public Game? ActiveGame { get; set; }

    [Parameter]
    public string UserId { get; set; } = null!;

    Player? activePlayer;

    protected override void OnInitialized()
    {
        activePlayer = ActiveGame?.Players.FirstOrDefault(p => p.UserId == UserId);

        GameRepo.PlayerJoinedGame += PlayerJoined;
    }

    void PlayerJoined(object? sender, PlayerUpdatedEventArgs args)
    {
        if (args.player.UserId == UserId && args.game.Id == ActiveGame?.Id)
        {
            activePlayer = args.player;
            InvokeAsync(StateHasChanged);
        }
    }

    public void Dispose()
    {
        GameRepo.PlayerJoinedGame -= PlayerJoined;
    }
}
