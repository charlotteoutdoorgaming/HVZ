@using HVZ.Web.Shared.Ui_Helpers
@inject IGameRepo GameRepo
@implements IDisposable

 <div class="border border-1 rounded border-secondary p-2 m-auto mt-3" style="max-width:550px;">
    @if(userPlayer is not null)
    {
        <div class="d-flex">
            <div class="flex-grow-0">
                @if (UserId is not null)
                {
                    <Thumbnail UserId="@UserId" Size="ImageService.ImageSize.SMALL" />
                }
                
            </div>
            <div class="flex-grow-1 mx-3">
                <p class="mb-0"><i class="fa-solid fa-id-card"></i> ID: <span>@userPlayer.GameId</span></p>
                <p class="mb-0"><i class="fa-solid fa-user"></i> Role: <GameRoleTracker ShowOz="true" Player="@userPlayer" GameId="@ActiveGame?.Id" /></p>
                <p class="mb-0"><i class="fa-solid fa-people-robbery"></i> Tags: <GameTagCounter Player="@userPlayer" GameId="@ActiveGame?.Id" /></p>
            </div>
        </div>
        <GameTag Player="@userPlayer" />
        
    }
    else
    {
        <p>You are not in this game</p>
        <button class="btn btn-primary w-100" data-bs-target="#join-game-modal" data-bs-toggle="modal">Join game</button>
    }
</div>

@code {
    [CascadingParameter(Name = "UserId")]
    public string? UserId { get; set; }

    [CascadingParameter]
    public Game? ActiveGame { get; set; }

    Player? userPlayer;

    protected override void OnInitialized()
    {
        GameRepo.PlayerJoinedGame += PlayerJoined;
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        if (ActiveGame is not null && UserId is not null)
        {
            userPlayer = ActiveGame.Players.FirstOrDefault(p => p.UserId == UserId);
        }
    }

    void PlayerJoined(object? sender, PlayerUpdatedEventArgs eventArgs)
    {
        if (userPlayer is null)
        {
            if (eventArgs.player.UserId == UserId)
            {
                userPlayer = eventArgs.player;
                InvokeAsync(StateHasChanged);
            }
        }
    }

    public void Dispose()
    {
        GameRepo.PlayerJoinedGame -= PlayerJoined;
    }
}
