@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg navbar-dark px-4 sticky-top bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">PlayHVZ</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbar" aria-controls="navbar" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbar">
            <ul class="navbar-nav mr-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link @HomeActive()" aria-current="page" href="/@homeLink"><i class="fa-solid fa-house"></i> Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @ExploreActive()" aria-current="page" href="/@exploreLink"><i class="fa-solid fa-magnifying-glass"></i> Explore</a>
                </li>
            </ul>
            <div>
                <LoginDisplay />
            </div>
        </div>
    </div>
</nav>

@code
{
    string currentLocation = "";

    string homeLink = "home"; // TODO: Page does not exist yet
    string exploreLink = "explore"; // TODO: Page does not exist yet

    string HomeActive() => currentLocation == homeLink ? "active" : null!;
    string ExploreActive() => currentLocation == exploreLink ? "active" : null!;

    protected override void OnInitialized()
    {
        // Get the first URL path after the domain name
        // https://www.playhvz.org/pathToGet
        currentLocation = NavigationManager.Uri.Split("/")[3];
        System.Console.WriteLine(currentLocation);

        NavigationManager.LocationChanged += (_, eventArgs) => {
            currentLocation = eventArgs.Location.Split("/")[3];
            InvokeAsync(StateHasChanged);
        };
    }
}
