@inherits ComponentTestBase
@using HVZ.Web.Shared.Game.GameLog
@using HVZ.Web.Shared.Ui_Helpers

@code
{
    string tagReceiverId = "9999";
    string tagReceiverFullName = "Tag Receiver";
    int numTags = 2;

    [OneTimeSetUp]
    public void Setup()
    {
        mockUserRepo.Setup(r => r.GetUserById(testUserId))
            .ReturnsAsync(Mock.Of<TestUser>());
        
        mockUserRepo.Setup(r => r.GetUserById(tagReceiverId))
            .ReturnsAsync(
                Mock.Of<TestUser>(u => u.Id == tagReceiverId && u.FullName == tagReceiverFullName)
            );

        RegisterServices();
    }

    GameEventLog GetTagEvent(string tagReceiverId, bool ozTag)
        => new GameEventLog(
            GameEvent.Tag, time, testUserId,
                new Dictionary<string, object> {
                    { "tagreciever", tagReceiverId },
                    { "taggertagcount", numTags },
                    { "oztagger", ozTag }    
                }
        );
    
    [Test]
    public void Test_RegularTag()
    {
        var cut = Render(@<TagLog LogItem="@GetTagEvent(tagReceiverId, false)" SeesOzDetails="@false" />);

        var thumbnails = cut.FindComponents<Thumbnail>();
        Assert.That(thumbnails.Count, Is.EqualTo(2));

        var header = cut.Find("h6");

        header.MarkupMatches(@<h6 class:ignore><b>@testUserFullName</b> has tagged <b>@tagReceiverFullName</b></h6>);
    }

    [Test]
    public void Test_OzTagDoesNotSeeDetails()
    {
        var cut = Render(@<TagLog LogItem="@GetTagEvent(tagReceiverId, true)" SeesOzDetails="@false" />);

        var thumbnails = cut.FindComponents<Thumbnail>();
        Assert.That(thumbnails.Count, Is.EqualTo(1));

        var ozImage = cut.Find(".oz-image");
        ozImage.MarkupMatches(
            @<img src="https://ui-avatars.com/api/?name=Original+Zombie&amp;size=64&amp;background=0D8ABC&amp;color=fff" class:ignore style:ignore >
        );

        var header = cut.Find("h6");
        header.MarkupMatches(
            @<h6 class:ignore><b>An OZ </b>has tagged <b>@tagReceiverFullName</b></h6>
        );
    }

    [Test]
    public void Test_OzTagSeesDetails()
    {
        var cut = Render(@<TagLog LogItem="@GetTagEvent(tagReceiverId, true)" SeesOzDetails="@true" />);

        var thumbnails = cut.FindComponents<Thumbnail>();
        Assert.That(thumbnails.Count, Is.EqualTo(2));

        var header = cut.Find("h6");
        var body = cut.Find("p");

        header.MarkupMatches(@<h6 class:ignore><b>@testUserFullName</b> has tagged <b>@tagReceiverFullName</b><span> as OZ</span></h6>);
        body.MarkupMatches(@<p class:ignore>@testUserFullName has @numTags tags</p>);
    }
}