@inherits ComponentTestBase

@code {

    [OneTimeSetUp]
    public void Setup()
    {
        RegisterServices();
    }

    [Test]
    public void Test_EscapeHtml()
    {
        string htmlString = "&<script>console.log(\"hello world\");</script>";
        string escapedHtmlString = "&amp;&lt;script&gt;console.log(\"hello world\");&lt;/script&gt;";

        var cut = Render(@<HVZ.Web.Shared.Ui_Helpers.MarkdownDisplay Source="@htmlString" />);
        var element = cut.Find("#markdown");
        element.MarkupMatches(
            @<div id="markdown">
                <p>@((MarkupString)escapedHtmlString)</p>
                <br />
            </div>
        );
    }

    [Test]
    public void Test_DoesNotUseHeaders()
    {
        string sourceString = "# Heading";
        var cut = Render(@<HVZ.Web.Shared.Ui_Helpers.MarkdownDisplay Source="@sourceString" />);
        var element = cut.Find("#markdown");
        element.MarkupMatches(
            @<div id="markdown">
                <p>@((MarkupString)sourceString)</p>
                <br />
            </div>
        );
    }

    [TestCase("brands discord", "fa-brands fa-discord")]
    [TestCase("person", "fa-solid fa-person")]
    public void Test_IconFormatting(string iconMd, string iconClass)
    {
        string sourceString = $":{iconMd}:";
        var cut = Render(@<HVZ.Web.Shared.Ui_Helpers.MarkdownDisplay Source="@sourceString" />);
        var element = cut.Find("#markdown");
        element.MarkupMatches(
            @<div id="markdown">
                <p><i class="@iconClass"></i></p>
                <br />
            </div>
        );
    }

    [Test]
    public void Test_NewlineRendersAsBreak()
    {
        string sourceString = "line1\nline2";
        var cut = Render(@<HVZ.Web.Shared.Ui_Helpers.MarkdownDisplay Source="@sourceString" />);
        var element = cut.Find("#markdown");
        element.MarkupMatches(
            @<div id="markdown">
                <p>
                    line1<br />
                    line2
                </p>
                <br />
            </div>
        );
    }
}
